default:
  image: ruby:3.0.3

stages:
  - lint
  - test
  - deploy

variables:
  RAILS_ENV: test
  BUNDLER_VERSION: 2.2.26
  POSTGRES_DB: cinema-api
  POSTGRES_PASSWORD: postgres
  DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/$POSTGRES_DB"

.install_ruby_gems: &install_ruby_gems
  - gem install bundler -v ${BUNDLER_VERSION}
  - bundle install --path vendor

.common:
  before_script:
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    - *install_ruby_gems
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/ruby

rubocop:
  extends: .common
  stage: lint
  script:
    - bundle exec rubocop
  rules:
    - if: $CI_MERGE_REQUEST_ID

brakeman:
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/brakeman:2
  stage: lint
  allow_failure: true
  script:
    - /analyzer run
  artifacts:
    reports:
      sast: gl-sast-report.json
  rules:
    - if: $CI_MERGE_REQUEST_ID

bundler-audit:
  extends: .common
  stage: lint
  script:
    - gem install bundler-audit
    - bundle audit --update
    - bundle audit
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  allow_failure: true

bundler-leak:
  extends: .common
  stage: lint
  script:
    - gem install bundler-leak
    - bundle leak check --update
    - bundle leak
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_PIPELINE_SOURCE == 'schedule'

rspec:
  extends: .common
  stage: test
  before_script:
    - *install_ruby_gems
  services:
    - postgres:12-alpine
  script:
    - bundle exec rake db:migrate
    - bundle exec rspec
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  artifacts:
    reports:
      cobertura: coverage/coverage.xml
